diff --git a/android/src/main/java/it/innove/BleManager.java b/android/src/main/java/it/innove/BleManager.java
index 379469e..802a2ec 100644
--- a/android/src/main/java/it/innove/BleManager.java
+++ b/android/src/main/java/it/innove/BleManager.java
@@ -10,7 +10,7 @@
 import android.util.Base64;
 import androidx.annotation.NonNull;
 import com.facebook.react.bridge.*;
-import com.facebook.react.modules.core.DeviceEventManagerModule.RCTDeviceEventEmitter;
+import com.facebook.react.modules.core.DeviceEventManagerModule;
 
 import java.util.*;
 import java.util.concurrent.ConcurrentHashMap;
@@ -21,7 +21,7 @@
 import static android.app.Activity.RESULT_OK;
 
 @ReactModule(name = BleManager.LOG_TAG)
-class BleManager extends NativeBleManagerSpec {
+class BleManager extends ReactContextBaseJavaModule {
     public static final String LOG_TAG = "BleManager";
     public static final String ERROR_INVALID_PERIPHERAL = "InvalidPeripheral";
 
@@ -140,7 +140,7 @@
         public void onReceive(Context context, Intent intent) {
             final String action = intent.getAction();
             final String state = intent.getStringExtra(BluetoothAdapter.EXTRA_STATE);
-            WritableMap map = Arguments.createMap();
+            WritableMap map = Arguments.createMap();
             map.putString("state", state);
             emitOnDidUpdateState(map);
         }
@@ -155,7 +155,7 @@
     private void emit(String eventName, @NonNull WritableMap params) {
         getReactApplicationContext()
                 .getJSModule(DeviceEventManagerModule.RCTDeviceEventEmitter.class)
-                .emit(eventName, params);
+                .emit(eventName, params);
     }
 
     private void emit(String eventName, String msg) {
@@ -165,22 +165,10 @@
                 .emit(eventName, msg);
     }
 
-    @Override
     @Override
     @ReactMethod
     public void start(ReadableMap options, Promise promise) {
         Log.d(LOG_TAG, "start: " + bluetoothAdapter.isEnabled());
-
-        if (options.hasKey("forceLegacyImplementation")) {
-            forceLegacyImplementation = options.getBoolean("forceLegacyImplementation");
-        }
-
-        if (options.hasKey("showPowerAlert")) {
-            showPowerAlert = options.getBoolean("showPowerAlert");
-        }
-
-        // This is necessary for now to remove NativeBleManagerSpec from imports
-        if (getNativeModule(BleManagerModule.class) != null) {}
 
         if (!bluetoothAdapter.isEnabled()) {
             Log.d(LOG_TAG, "Bluetooth not enabled.  Enable it now, or call BleManager.enableBluetooth().");
@@ -232,7 +220,6 @@
         }
     }
 
-    @Override
     @ReactMethod
     public void enableBluetooth(Promise promise) {
         if (bluetoothAdapter.isEnabled()) {
@@ -248,7 +235,6 @@
         }
     }
 
-    @Override
     @ReactMethod
     public void scan(ReadableArray serviceUUIDs, final int scanSeconds, boolean allowDuplicates, ReadableMap options, final Promise promise) {
         Log.d(LOG_TAG, "scan");
@@ -282,7 +268,6 @@
         }
     }
 
-    @Override
     @ReactMethod
     public void stopScan(Promise promise) {
         Log.d(LOG_TAG, "Stop scan");
@@ -308,7 +293,6 @@
         promise.resolve(null);
     }
 
-    @Override
     @ReactMethod
     public void connect(String peripheralUUID, Promise promise) {
         BluetoothDevice device = bluetoothAdapter.getRemoteDevice(peripheralUUID);
@@ -338,7 +322,6 @@
         }
     }
 
-    @Override
     @ReactMethod
     public void disconnect(String peripheralUUID, boolean force, Promise promise) {
         BluetoothDevice device = bluetoothAdapter.getRemoteDevice(peripheralUUID);
@@ -367,7 +350,6 @@
         }
     }
 
-    @Override
     @ReactMethod
     public void checkState(Promise promise) {
         WritableMap map = Arguments.createMap();
@@ -382,7 +364,6 @@
         promise.resolve(map);
     }
 
-    @Override
     @ReactMethod
     public void startPeripheral(ReadableMap options, Promise promise) {
         if (!bluetoothAdapter.isEnabled()) {
@@ -420,7 +401,6 @@
         promise.resolve(null);
     }
 
-    @Override
     @ReactMethod
     public void stopPeripheral(Promise promise) {
         if (!bluetoothAdapter.isEnabled()) {
@@ -434,7 +414,6 @@
         promise.resolve(null);
     }
 
-    @Override
     @ReactMethod
     public void getDiscoveredPeripherals(Promise promise) {
         Log.d(LOG_TAG, "Get discovered peripherals");
@@ -450,7 +429,6 @@
         promise.resolve(map);
     }
 
-    @Override
     @ReactMethod
     public void getConnectedPeripherals(ReadableArray serviceUUIDs, Promise promise) {
         Log.d(LOG_TAG, "Get connected peripherals");
@@ -470,7 +448,6 @@
         promise.resolve(map);
     }
 
-    @Override
     @ReactMethod
     public void retrieveServices(String peripheralUUID, ReadableArray serviceUUIDs, Promise promise) {
         BluetoothDevice device = bluetoothAdapter.getRemoteDevice(peripheralUUID);
@@ -512,7 +489,6 @@
         }
     }
 
-    @Override
     @ReactMethod
     public void read(String peripheralUUID, String serviceUUID, String characteristicUUID, Promise promise) {
         BluetoothDevice device = bluetoothAdapter.getRemoteDevice(peripheralUUID);
@@ -546,7 +522,6 @@
         }
     }
 
-    @Override
     @ReactMethod
     public void readRSSI(String peripheralUUID, Promise promise) {
         BluetoothDevice device = bluetoothAdapter.getRemoteDevice(peripheralUUID);
@@ -574,7 +549,6 @@
         }
     }
 
-    @Override
     @ReactMethod
     public void write(String peripheralUUID, String serviceUUID, String characteristicUUID, ReadableArray message, Integer maxByteSize, Promise promise) {
         BluetoothDevice device = bluetoothAdapter.getRemoteDevice(peripheralUUID);
@@ -620,7 +594,6 @@
         }
     }
 
-    @Override
     @ReactMethod
     public void writeWithoutResponse(String peripheralUUID, String serviceUUID, String characteristicUUID, ReadableArray message, Integer maxByteSize, Boolean queue, Promise promise) {
         BluetoothDevice device = bluetoothAdapter.getRemoteDevice(peripheralUUID);
@@ -668,7 +641,6 @@
         }
     }
 
-    @Override
     @ReactMethod
     public void setupNotification(String peripheralUUID, String serviceUUID, String characteristicUUID, Promise promise) {
         Log.d(LOG_TAG, "setupNotification");
@@ -699,7 +671,6 @@
         }
     }
 
-    @Override
     @ReactMethod
     public void startNotification(String peripheralUUID, String serviceUUID, String characteristicUUID, Promise promise) {
         setupNotification(peripheralUUID, serviceUUID, characteristicUUID, promise);
@@ -707,7 +678,6 @@
         Log.w(LOG_TAG, "startNotification is deprecated, use setupNotification instead");
     }
 
-    @Override
     @ReactMethod
     public void stopNotification(String peripheralUUID, String serviceUUID, String characteristicUUID, Promise promise) {
         BluetoothDevice device = bluetoothAdapter.getRemoteDevice(peripheralUUID);
@@ -735,7 +705,6 @@
         }
     }
 
-    @Override
     @ReactMethod
     public void checkNotification(String peripheralUUID, String serviceUUID, String characteristicUUID, Promise promise) {
         BluetoothDevice device = bluetoothAdapter.getRemoteDevice(peripheralUUID);
@@ -765,7 +734,6 @@
         promise.resolve(false);
     }
 
-    @Override
     @ReactMethod
     public void getMaximumWriteValueLength(String peripheralUUID, Integer type, Promise promise) {
         BluetoothDevice device = bluetoothAdapter.getRemoteDevice(peripheralUUID);
@@ -789,7 +757,6 @@
         }
     }
 
-    @Override
     @ReactMethod
     public void createBond(String peripheralUUID, Promise promise) {
         BluetoothDevice device = bluetoothAdapter.getRemoteDevice(peripheralUUID);
@@ -806,7 +773,6 @@
         }
     }
 
-    @Override
     @ReactMethod
     public void removeBond(String peripheralUUID, Promise promise) {
         BluetoothDevice device = bluetoothAdapter.getRemoteDevice(peripheralUUID);
@@ -825,7 +791,6 @@
         }
     }
 
-    @Override
     @ReactMethod
     public void getBondedPeripherals(Promise promise) {
         WritableArray map = Arguments.createArray();
@@ -845,7 +810,6 @@
         promise.resolve(map);
     }
 
-    @Override
     @ReactMethod
     public void setTxPower(String peripheralUUID, int txPower, Promise promise) {
         promise.resolve(null);
@@ -853,7 +817,6 @@
         Log.d(LOG_TAG, "setTxPower not yet implemented in Android");
     }
 
-    @Override
     @ReactMethod
     public void getServiceData(String peripheralUUID, String serviceUUID, Promise promise) {
         promise.resolve(null);
@@ -861,7 +824,6 @@
         Log.d(LOG_TAG, "getServiceData not yet implemented in Android");
     }
 
-    @Override
     @ReactMethod
     public void getAdvertisingUUIDs(Promise promise) {
         promise.resolve(null);
@@ -869,7 +831,6 @@
         Log.d(LOG_TAG, "getAdvertisingUUIDs not yet implemented in Android");
     }
 
-    @Override
     @ReactMethod
     public void requestConnectionPriority(String peripheralUUID, int connectionPriority, Promise promise) {
         BluetoothDevice device = bluetoothAdapter.getRemoteDevice(peripheralUUID);
@@ -887,7 +848,6 @@
         }
     }
 
-    @Override
     @ReactMethod
     public void requestMTU(String peripheralUUID, int mtu, Promise promise) {
         BluetoothDevice device = bluetoothAdapter.getRemoteDevice(peripheralUUID);
@@ -904,7 +864,6 @@
         }
     }
 
-    @Override
     @ReactMethod
     public void disconnectAll(Promise promise) {
         if (peripherals.size() > 0) {
@@ -918,7 +877,6 @@
         promise.resolve(null);
     }
 
-    @Override
     @ReactMethod
     public void readDescriptor(String peripheralUUID, String serviceUUID, String characteristicUUID, String descriptorUUID, Promise promise) {
         BluetoothDevice device = bluetoothAdapter.getRemoteDevice(peripheralUUID);
@@ -948,7 +906,6 @@
         }
     }
 
-    @Override
     @ReactMethod
     public void writeDescriptor(String peripheralUUID, String serviceUUID, String characteristicUUID, String descriptorUUID, ReadableArray message, Promise promise) {
         BluetoothDevice device = bluetoothAdapter.getRemoteDevice(peripheralUUID);
@@ -976,7 +933,6 @@
         }
     }
 
-    @Override
     @ReactMethod
     public void startDSCC(Promise promise) {
         promise.resolve(null);
@@ -984,7 +940,6 @@
         Log.d(LOG_TAG, "startDSCC not yet implemented in Android");
     }
 
-    @Override
     @ReactMethod
     public void stopDSCC(Promise promise) {
         promise.resolve(null);
@@ -992,7 +947,6 @@
         Log.d(LOG_TAG, "stopDSCC not yet implemented in Android");
     }
 
-    @Override
     @ReactMethod
     public void addListener(String eventName) {
         // Keep: Required for RN built-in Event Emitter Calls.
@@ -1000,7 +954,6 @@
 
     }
 
-    @Override
     @ReactMethod
     public void removeListeners(double count) {
         // Keep: Required for RN built-in Event Emitter Calls.
diff --git a/android/src/main/java/it/innove/DefaultScanManager.java b/android/src/main/java/it/innove/DefaultScanManager.java
index 73a38fa..98abf10 100644
--- a/android/src/main/java/it/innove/DefaultScanManager.java
+++ b/android/src/main/java/it/innove/DefaultScanManager.java
@@ -256,7 +256,7 @@
             }
 
             WritableMap map = Arguments.createMap();
-            bleManager.emitOnStopScan(map);
+            bleManager.emit("BleManagerStopScan", map);
         }
     }
 }